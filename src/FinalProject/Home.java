/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FinalProject;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ahmad
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    //bikin linkedlist buat menyimpan daftarMatkul,daftarPokokBahasan
    LinkedList daftarMatkul = new LinkedList();
    LinkedList daftarPokokBahasan = new LinkedList();
    LinkedList<Pertanyaan> listSoal = new LinkedList<Pertanyaan>();
    LinkedList<Pertanyaan> soalExport;
    int btnOKhandler;
    private static int i = 0;
    
            
    public Home(int myIndex) {
        initComponents();
        i = myIndex;
        settampilawal();
        setJudulFrame();
        hapusItemCB();
        refreshCBDaftarSoal(); 
        refreshCBGenerate(); 
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogMKPB = new javax.swing.JDialog();
        btnOK = new javax.swing.JButton();
        tfMKPB = new javax.swing.JTextField();
        lblMKPB = new javax.swing.JLabel();
        jFrameDetailSoal = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldDetailSoalMataKuliah = new javax.swing.JTextField();
        jTextFieldDetailSoalPokokBahasan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDetailSoalSoal = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaDetailSoalJawaban = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jFileChooserGenerate = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelBuatSoal = new javax.swing.JPanel();
        jPanelMatkulPokokBahasan = new javax.swing.JPanel();
        lblDaftarMatkul = new javax.swing.JLabel();
        cbMatkul = new javax.swing.JComboBox();
        btnDMKHapus = new javax.swing.JButton();
        btnDMKTambah = new javax.swing.JButton();
        lblDaftarPokokBahasan = new javax.swing.JLabel();
        cbPokokBahasan = new javax.swing.JComboBox();
        btnDPBTambah = new javax.swing.JButton();
        btnDPBHapus = new javax.swing.JButton();
        btnDMKHapus1 = new javax.swing.JButton();
        btnDPBHapus1 = new javax.swing.JButton();
        jPanelDetailSoal = new javax.swing.JPanel();
        jPanelPertanyaan = new javax.swing.JPanel();
        lblMataKuliah = new javax.swing.JLabel();
        jScrollSoal = new javax.swing.JScrollPane();
        jTextAreaSoal = new javax.swing.JTextArea();
        btnSimpan = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lblPokokBahasan = new javax.swing.JLabel();
        lblMataKuliah1 = new javax.swing.JLabel();
        lblPokokBahasan1 = new javax.swing.JLabel();
        jPanelPilihan = new javax.swing.JPanel();
        jScrollJawabanA = new javax.swing.JScrollPane();
        jTextAreaJawabanA = new javax.swing.JTextArea();
        jScrollPaneJawabanB = new javax.swing.JScrollPane();
        jTextAreaJawabanB = new javax.swing.JTextArea();
        jScrollPaneJawabanC = new javax.swing.JScrollPane();
        jTextAreaJawabanC = new javax.swing.JTextArea();
        jScrollPaneJawabanD = new javax.swing.JScrollPane();
        jTextAreaJawabanD = new javax.swing.JTextArea();
        jScrollPaneJawabanE = new javax.swing.JScrollPane();
        jTextAreaJawabanE = new javax.swing.JTextArea();
        jLabelA = new javax.swing.JLabel();
        jRadioButtonJawabanA = new javax.swing.JRadioButton();
        jLabelB = new javax.swing.JLabel();
        jRadioButtonJawabanB = new javax.swing.JRadioButton();
        jLabelC = new javax.swing.JLabel();
        jRadioButtonJawabanC = new javax.swing.JRadioButton();
        jLabelD = new javax.swing.JLabel();
        jRadioButtonJawabanD = new javax.swing.JRadioButton();
        jLabelE = new javax.swing.JLabel();
        jRadioButtonJawabanE = new javax.swing.JRadioButton();
        btnHapusSoal = new javax.swing.JButton();
        btnSelanjutnya = new javax.swing.JButton();
        btnSebelumnya = new javax.swing.JButton();
        btnPalingAwal = new javax.swing.JButton();
        btnPalingAkhir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelDaftarSoal = new javax.swing.JPanel();
        jPanelDaftarMatkul = new javax.swing.JPanel();
        btnTampilkanDaftarSoalSemua = new javax.swing.JButton();
        cbMatkulDaftarSoalMatkul1 = new javax.swing.JComboBox();
        btnTampilkanDaftarSoalperMatkul = new javax.swing.JButton();
        btnTampilkanDaftarSoalperPokBas = new javax.swing.JButton();
        cbPokokBahasanDaftarSoalPokBas = new javax.swing.JComboBox();
        cbMatkulDaftarSoalMatkul = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDaftarSoal = new javax.swing.JTable();
        jPanelGenerateSoal = new javax.swing.JPanel();
        jPanelDaftarMatkul1 = new javax.swing.JPanel();
        cbMatkulGenerate = new javax.swing.JComboBox();
        btnGenerateSoal = new javax.swing.JButton();
        cbPokokBahasanGenerate = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableGenerate = new javax.swing.JTable();
        btnGenerateSoalExport = new javax.swing.JButton();
        jTextFieldGenerateJumlahSoal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnGenerateTampilkan = new javax.swing.JButton();
        jLabelLokasiFile = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanelPilihDaftarMatkul1 = new javax.swing.JPanel();
        lblDaftarMatkulGenerate1 = new javax.swing.JLabel();
        cbMatkulExport = new javax.swing.JComboBox();
        lblDaftarPokokBahasanGenerate1 = new javax.swing.JLabel();
        cbPokokBahasanExport = new javax.swing.JComboBox();
        lblJumlahSoalGenerate1 = new javax.swing.JLabel();
        tfJumlahSoalExport = new javax.swing.JTextField();
        btnExport = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmFile = new javax.swing.JMenu();
        jmiFileBaru = new javax.swing.JMenuItem();
        jmiFileBuka = new javax.swing.JMenuItem();
        jmiFileSimpan = new javax.swing.JMenuItem();
        jmiFileKeluar = new javax.swing.JMenuItem();
        jmEdit = new javax.swing.JMenu();
        jmHelp = new javax.swing.JMenu();
        jmiHelpUserGuide = new javax.swing.JMenuItem();
        jmiHelpTentang = new javax.swing.JMenuItem();

        jDialogMKPB.setMinimumSize(new java.awt.Dimension(400, 150));

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        tfMKPB.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblMKPB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMKPB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMKPB.setText("Nama Matakuliah atau Pokok Bahasan");

        javax.swing.GroupLayout jDialogMKPBLayout = new javax.swing.GroupLayout(jDialogMKPB.getContentPane());
        jDialogMKPB.getContentPane().setLayout(jDialogMKPBLayout);
        jDialogMKPBLayout.setHorizontalGroup(
            jDialogMKPBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogMKPBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialogMKPBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfMKPB, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMKPB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialogMKPBLayout.setVerticalGroup(
            jDialogMKPBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogMKPBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMKPB, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfMKPB, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        jFrameDetailSoal.setMinimumSize(new java.awt.Dimension(748, 505));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Soal"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mata Kuliah");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Pokok Bahasan");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Soal");

        jTextFieldDetailSoalMataKuliah.setText("Mata Kuliah");
        jTextFieldDetailSoalMataKuliah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDetailSoalMataKuliahActionPerformed(evt);
            }
        });

        jTextFieldDetailSoalPokokBahasan.setText("Pokok Bahasan");

        jTextAreaDetailSoalSoal.setColumns(20);
        jTextAreaDetailSoalSoal.setRows(5);
        jTextAreaDetailSoalSoal.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaDetailSoalSoal);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Jawaban");

        jTextAreaDetailSoalJawaban.setColumns(20);
        jTextAreaDetailSoalJawaban.setRows(5);
        jTextAreaDetailSoalJawaban.setWrapStyleWord(true);
        jScrollPane4.setViewportView(jTextAreaDetailSoalJawaban);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(106, 106, 106)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDetailSoalMataKuliah)
                            .addComponent(jTextFieldDetailSoalPokokBahasan, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldDetailSoalMataKuliah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDetailSoalPokokBahasan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrameDetailSoalLayout = new javax.swing.GroupLayout(jFrameDetailSoal.getContentPane());
        jFrameDetailSoal.getContentPane().setLayout(jFrameDetailSoalLayout);
        jFrameDetailSoalLayout.setHorizontalGroup(
            jFrameDetailSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameDetailSoalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrameDetailSoalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(27, 27, 27))
        );
        jFrameDetailSoalLayout.setVerticalGroup(
            jFrameDetailSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameDetailSoalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Home - BankSoal Portable 1.0");
        setMinimumSize(new java.awt.Dimension(994, 629));
        setPreferredSize(new java.awt.Dimension(1038, 546));
        setResizable(false);
        setSize(new java.awt.Dimension(1038, 546));

        jTabbedPane1.setToolTipText("Buat Soal");
        jTabbedPane1.setName("Buat Soal"); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanelMatkulPokokBahasan.setBorder(javax.swing.BorderFactory.createTitledBorder("Mata Kuliah dan Pokok Bahasan"));

        lblDaftarMatkul.setText("Daftar Mata Kuliah");

        cbMatkul.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMatkul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbMatkulMouseClicked(evt);
            }
        });
        cbMatkul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMatkulActionPerformed(evt);
            }
        });

        btnDMKHapus.setText("Hapus");
        btnDMKHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDMKHapusActionPerformed(evt);
            }
        });

        btnDMKTambah.setText("Tambah");
        btnDMKTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDMKTambahActionPerformed(evt);
            }
        });

        lblDaftarPokokBahasan.setText("Daftar Pokok Bahasan");

        cbPokokBahasan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnDPBTambah.setText("Tambah");
        btnDPBTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDPBTambahActionPerformed(evt);
            }
        });

        btnDPBHapus.setText("Hapus");
        btnDPBHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDPBHapusActionPerformed(evt);
            }
        });

        btnDMKHapus1.setText("Pilih");
        btnDMKHapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDMKHapus1ActionPerformed(evt);
            }
        });

        btnDPBHapus1.setText("Pilih");
        btnDPBHapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDPBHapus1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMatkulPokokBahasanLayout = new javax.swing.GroupLayout(jPanelMatkulPokokBahasan);
        jPanelMatkulPokokBahasan.setLayout(jPanelMatkulPokokBahasanLayout);
        jPanelMatkulPokokBahasanLayout.setHorizontalGroup(
            jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatkulPokokBahasanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMatkulPokokBahasanLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnDPBTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDPBHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelMatkulPokokBahasanLayout.createSequentialGroup()
                        .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbMatkul, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelMatkulPokokBahasanLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(btnDMKTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDMKHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDMKHapus1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanelMatkulPokokBahasanLayout.createSequentialGroup()
                        .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbPokokBahasan, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDaftarMatkul, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDaftarPokokBahasan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(11, 11, 11)
                        .addComponent(btnDPBHapus1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelMatkulPokokBahasanLayout.setVerticalGroup(
            jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatkulPokokBahasanLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(lblDaftarMatkul)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMatkul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDMKHapus1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDMKHapus)
                    .addComponent(btnDMKTambah))
                .addGap(18, 18, 18)
                .addComponent(lblDaftarPokokBahasan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPokokBahasan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDPBHapus1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMatkulPokokBahasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDPBHapus)
                    .addComponent(btnDPBTambah))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelDetailSoal.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail Soal"));

        jPanelPertanyaan.setBorder(javax.swing.BorderFactory.createTitledBorder("Pertanyaan"));

        lblMataKuliah.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMataKuliah.setText("Mata Kuliah");

        jTextAreaSoal.setColumns(20);
        jTextAreaSoal.setLineWrap(true);
        jTextAreaSoal.setRows(5);
        jTextAreaSoal.setWrapStyleWord(true);
        jScrollSoal.setViewportView(jTextAreaSoal);

        btnSimpan.setText("Tambah & Simpan");
        btnSimpan.setMargin(new java.awt.Insets(2, 6, 2, 6));
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit & Lanjut");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        lblPokokBahasan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPokokBahasan.setText("Pokok Bahasan");

        lblMataKuliah1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMataKuliah1.setText("Mata Kuliah");

        lblPokokBahasan1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPokokBahasan1.setText("Pokok Bahasan");

        javax.swing.GroupLayout jPanelPertanyaanLayout = new javax.swing.GroupLayout(jPanelPertanyaan);
        jPanelPertanyaan.setLayout(jPanelPertanyaanLayout);
        jPanelPertanyaanLayout.setHorizontalGroup(
            jPanelPertanyaanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPertanyaanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPertanyaanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPertanyaanLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblMataKuliah, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblMataKuliah1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelPertanyaanLayout.createSequentialGroup()
                        .addGroup(jPanelPertanyaanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPokokBahasan1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPokokBahasan, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollSoal, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelPertanyaanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelPertanyaanLayout.setVerticalGroup(
            jPanelPertanyaanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPertanyaanLayout.createSequentialGroup()
                .addGroup(jPanelPertanyaanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPertanyaanLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollSoal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanelPertanyaanLayout.createSequentialGroup()
                .addComponent(lblMataKuliah1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMataKuliah, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPokokBahasan1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPokokBahasan, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelPilihan.setBorder(javax.swing.BorderFactory.createTitledBorder("Pilihan"));

        jTextAreaJawabanA.setColumns(20);
        jTextAreaJawabanA.setLineWrap(true);
        jTextAreaJawabanA.setRows(5);
        jTextAreaJawabanA.setWrapStyleWord(true);
        jScrollJawabanA.setViewportView(jTextAreaJawabanA);

        jTextAreaJawabanB.setColumns(20);
        jTextAreaJawabanB.setLineWrap(true);
        jTextAreaJawabanB.setRows(5);
        jTextAreaJawabanB.setWrapStyleWord(true);
        jScrollPaneJawabanB.setViewportView(jTextAreaJawabanB);

        jTextAreaJawabanC.setColumns(20);
        jTextAreaJawabanC.setLineWrap(true);
        jTextAreaJawabanC.setRows(5);
        jTextAreaJawabanC.setWrapStyleWord(true);
        jScrollPaneJawabanC.setViewportView(jTextAreaJawabanC);

        jTextAreaJawabanD.setColumns(20);
        jTextAreaJawabanD.setLineWrap(true);
        jTextAreaJawabanD.setRows(5);
        jTextAreaJawabanD.setWrapStyleWord(true);
        jScrollPaneJawabanD.setViewportView(jTextAreaJawabanD);

        jTextAreaJawabanE.setColumns(20);
        jTextAreaJawabanE.setLineWrap(true);
        jTextAreaJawabanE.setRows(5);
        jTextAreaJawabanE.setWrapStyleWord(true);
        jScrollPaneJawabanE.setViewportView(jTextAreaJawabanE);

        jLabelA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelA.setText("A");

        jRadioButtonJawabanA.setText("Benar");

        jLabelB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelB.setText("B");

        jRadioButtonJawabanB.setText("Benar");

        jLabelC.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelC.setText("C");

        jRadioButtonJawabanC.setText("Benar");

        jLabelD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelD.setText("D");

        jRadioButtonJawabanD.setText("Benar");

        jLabelE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelE.setText("E");

        jRadioButtonJawabanE.setText("Benar");

        btnHapusSoal.setText("Hapus Soal");
        btnHapusSoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusSoalActionPerformed(evt);
            }
        });

        btnSelanjutnya.setText("Selanjutnya");
        btnSelanjutnya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelanjutnyaActionPerformed(evt);
            }
        });

        btnSebelumnya.setText("Sebelumnya");
        btnSebelumnya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSebelumnyaActionPerformed(evt);
            }
        });

        btnPalingAwal.setText("Paling Awal");
        btnPalingAwal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPalingAwalActionPerformed(evt);
            }
        });

        btnPalingAkhir.setText("Paling Akhir");
        btnPalingAkhir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPalingAkhirActionPerformed(evt);
            }
        });

        jLabel1.setText("*Centang Jawaban apabila Jawaban Benar");

        javax.swing.GroupLayout jPanelPilihanLayout = new javax.swing.GroupLayout(jPanelPilihan);
        jPanelPilihan.setLayout(jPanelPilihanLayout);
        jPanelPilihanLayout.setHorizontalGroup(
            jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPilihanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPilihanLayout.createSequentialGroup()
                        .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                            .addComponent(jLabelC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonJawabanA)
                            .addComponent(jRadioButtonJawabanB)
                            .addComponent(jRadioButtonJawabanC)
                            .addComponent(jRadioButtonJawabanD)
                            .addComponent(jRadioButtonJawabanE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPilihanLayout.createSequentialGroup()
                                .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPaneJawabanB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollJawabanA, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneJawabanC))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSelanjutnya, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnHapusSoal, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSebelumnya, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPilihanLayout.createSequentialGroup()
                                .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPaneJawabanD)
                                    .addComponent(jScrollPaneJawabanE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPilihanLayout.createSequentialGroup()
                                        .addComponent(btnPalingAwal, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))
                                    .addComponent(btnPalingAkhir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanelPilihanLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelPilihanLayout.setVerticalGroup(
            jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPilihanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollJawabanA, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabelA)
                        .addComponent(jRadioButtonJawabanA))
                    .addComponent(btnHapusSoal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPilihanLayout.createSequentialGroup()
                        .addComponent(btnSelanjutnya, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSebelumnya, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPalingAwal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPalingAkhir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelPilihanLayout.createSequentialGroup()
                        .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneJawabanB, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButtonJawabanB)
                                .addComponent(jLabelB)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneJawabanC, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButtonJawabanC)
                                .addComponent(jLabelC)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneJawabanD, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButtonJawabanD)
                                .addComponent(jLabelD)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPaneJawabanE, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelPilihanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButtonJawabanE)
                                .addComponent(jLabelE))))))
        );

        javax.swing.GroupLayout jPanelDetailSoalLayout = new javax.swing.GroupLayout(jPanelDetailSoal);
        jPanelDetailSoal.setLayout(jPanelDetailSoalLayout);
        jPanelDetailSoalLayout.setHorizontalGroup(
            jPanelDetailSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetailSoalLayout.createSequentialGroup()
                .addGroup(jPanelDetailSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelPertanyaan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelPilihan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDetailSoalLayout.setVerticalGroup(
            jPanelDetailSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDetailSoalLayout.createSequentialGroup()
                .addComponent(jPanelPertanyaan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelPilihan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelBuatSoalLayout = new javax.swing.GroupLayout(jPanelBuatSoal);
        jPanelBuatSoal.setLayout(jPanelBuatSoalLayout);
        jPanelBuatSoalLayout.setHorizontalGroup(
            jPanelBuatSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuatSoalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelMatkulPokokBahasan, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDetailSoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBuatSoalLayout.setVerticalGroup(
            jPanelBuatSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBuatSoalLayout.createSequentialGroup()
                .addGroup(jPanelBuatSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelBuatSoalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelMatkulPokokBahasan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelDetailSoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buat Soal", jPanelBuatSoal);

        btnTampilkanDaftarSoalSemua.setText("Tampilkan Semua Soal");
        btnTampilkanDaftarSoalSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilkanDaftarSoalSemuaActionPerformed(evt);
            }
        });

        cbMatkulDaftarSoalMatkul1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnTampilkanDaftarSoalperMatkul.setText("Tampilkan Per Mata Kuliah");
        btnTampilkanDaftarSoalperMatkul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilkanDaftarSoalperMatkulActionPerformed(evt);
            }
        });

        btnTampilkanDaftarSoalperPokBas.setText("Tampilkan per Pokok Bahasan");
        btnTampilkanDaftarSoalperPokBas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilkanDaftarSoalperPokBasActionPerformed(evt);
            }
        });

        cbPokokBahasanDaftarSoalPokBas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbMatkulDaftarSoalMatkul.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMatkulDaftarSoalMatkul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMatkulDaftarSoalMatkulActionPerformed(evt);
            }
        });

        jTableDaftarSoal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableDaftarSoal);

        javax.swing.GroupLayout jPanelDaftarMatkulLayout = new javax.swing.GroupLayout(jPanelDaftarMatkul);
        jPanelDaftarMatkul.setLayout(jPanelDaftarMatkulLayout);
        jPanelDaftarMatkulLayout.setHorizontalGroup(
            jPanelDaftarMatkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDaftarMatkulLayout.createSequentialGroup()
                .addGap(723, 723, 723)
                .addComponent(btnTampilkanDaftarSoalSemua, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelDaftarMatkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelDaftarMatkulLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelDaftarMatkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelDaftarMatkulLayout.createSequentialGroup()
                            .addComponent(jScrollPane2)
                            .addContainerGap())
                        .addGroup(jPanelDaftarMatkulLayout.createSequentialGroup()
                            .addComponent(cbMatkulDaftarSoalMatkul, 0, 67, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnTampilkanDaftarSoalperMatkul, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(cbMatkulDaftarSoalMatkul1, 0, 67, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbPokokBahasanDaftarSoalPokBas, 0, 66, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnTampilkanDaftarSoalperPokBas, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(352, 352, 352)))))
        );
        jPanelDaftarMatkulLayout.setVerticalGroup(
            jPanelDaftarMatkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDaftarMatkulLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTampilkanDaftarSoalSemua)
                .addContainerGap(540, Short.MAX_VALUE))
            .addGroup(jPanelDaftarMatkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelDaftarMatkulLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelDaftarMatkulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbMatkulDaftarSoalMatkul)
                        .addComponent(btnTampilkanDaftarSoalperMatkul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbMatkulDaftarSoalMatkul1)
                        .addComponent(cbPokokBahasanDaftarSoalPokBas)
                        .addComponent(btnTampilkanDaftarSoalperPokBas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanelDaftarSoalLayout = new javax.swing.GroupLayout(jPanelDaftarSoal);
        jPanelDaftarSoal.setLayout(jPanelDaftarSoalLayout);
        jPanelDaftarSoalLayout.setHorizontalGroup(
            jPanelDaftarSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDaftarSoalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDaftarMatkul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDaftarSoalLayout.setVerticalGroup(
            jPanelDaftarSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDaftarSoalLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanelDaftarMatkul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Daftar Soal", jPanelDaftarSoal);

        cbMatkulGenerate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnGenerateSoal.setText("Generate Soal");
        btnGenerateSoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateSoalActionPerformed(evt);
            }
        });

        cbPokokBahasanGenerate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTableGenerate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableGenerate);

        btnGenerateSoalExport.setText("Simpan Hasil Export");
        btnGenerateSoalExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateSoalExportActionPerformed(evt);
            }
        });

        jLabel6.setText("Jumlah Soal");

        btnGenerateTampilkan.setText("Tampilkan");
        btnGenerateTampilkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateTampilkanActionPerformed(evt);
            }
        });

        jLabelLokasiFile.setText("Location to save file :");

        javax.swing.GroupLayout jPanelDaftarMatkul1Layout = new javax.swing.GroupLayout(jPanelDaftarMatkul1);
        jPanelDaftarMatkul1.setLayout(jPanelDaftarMatkul1Layout);
        jPanelDaftarMatkul1Layout.setHorizontalGroup(
            jPanelDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDaftarMatkul1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDaftarMatkul1Layout.createSequentialGroup()
                        .addComponent(cbMatkulGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbPokokBahasanGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGenerateTampilkan)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldGenerateJumlahSoal, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGenerateSoal)
                        .addGap(153, 153, 153)
                        .addComponent(btnGenerateSoalExport, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))
                    .addGroup(jPanelDaftarMatkul1Layout.createSequentialGroup()
                        .addComponent(jLabelLokasiFile)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanelDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelDaftarMatkul1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanelDaftarMatkul1Layout.setVerticalGroup(
            jPanelDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDaftarMatkul1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMatkulGenerate)
                    .addComponent(cbPokokBahasanGenerate)
                    .addComponent(btnGenerateSoal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGenerateSoalExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldGenerateJumlahSoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnGenerateTampilkan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelLokasiFile)
                .addGap(495, 495, 495))
            .addGroup(jPanelDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDaftarMatkul1Layout.createSequentialGroup()
                    .addGap(0, 72, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanelGenerateSoalLayout = new javax.swing.GroupLayout(jPanelGenerateSoal);
        jPanelGenerateSoal.setLayout(jPanelGenerateSoalLayout);
        jPanelGenerateSoalLayout.setHorizontalGroup(
            jPanelGenerateSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGenerateSoalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDaftarMatkul1, javax.swing.GroupLayout.PREFERRED_SIZE, 973, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelGenerateSoalLayout.setVerticalGroup(
            jPanelGenerateSoalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGenerateSoalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDaftarMatkul1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Generate Soal", jPanelGenerateSoal);

        jPanelPilihDaftarMatkul1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pilih Daftar Mata Kuliah"));

        lblDaftarMatkulGenerate1.setText("Daftar Mata Kuliah");

        cbMatkulExport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbMatkulExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbMatkulExportMouseClicked(evt);
            }
        });

        lblDaftarPokokBahasanGenerate1.setText("Daftar Pokok Bahasan");

        cbPokokBahasanExport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPokokBahasanExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPokokBahasanExportActionPerformed(evt);
            }
        });

        lblJumlahSoalGenerate1.setText("Jumlah Soal");

        btnExport.setText("Export");

        javax.swing.GroupLayout jPanelPilihDaftarMatkul1Layout = new javax.swing.GroupLayout(jPanelPilihDaftarMatkul1);
        jPanelPilihDaftarMatkul1.setLayout(jPanelPilihDaftarMatkul1Layout);
        jPanelPilihDaftarMatkul1Layout.setHorizontalGroup(
            jPanelPilihDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPilihDaftarMatkul1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPilihDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfJumlahSoalExport)
                    .addComponent(cbPokokBahasanExport, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbMatkulExport, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelPilihDaftarMatkul1Layout.createSequentialGroup()
                        .addComponent(lblDaftarMatkulGenerate1)
                        .addGap(129, 129, 129))
                    .addGroup(jPanelPilihDaftarMatkul1Layout.createSequentialGroup()
                        .addGroup(jPanelPilihDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelPilihDaftarMatkul1Layout.createSequentialGroup()
                                .addGroup(jPanelPilihDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblJumlahSoalGenerate1)
                                    .addComponent(lblDaftarPokokBahasanGenerate1))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanelPilihDaftarMatkul1Layout.setVerticalGroup(
            jPanelPilihDaftarMatkul1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPilihDaftarMatkul1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDaftarMatkulGenerate1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMatkulExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblDaftarPokokBahasanGenerate1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPokokBahasanExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(lblJumlahSoalGenerate1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfJumlahSoalExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(jPanelPilihDaftarMatkul1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jPanelPilihDaftarMatkul1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Export Soal", jPanel1);

        jmFile.setText("File");

        jmiFileBaru.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jmiFileBaru.setText("Baru..");
        jmiFileBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFileBaruActionPerformed(evt);
            }
        });
        jmFile.add(jmiFileBaru);

        jmiFileBuka.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jmiFileBuka.setText("Buka..");
        jmiFileBuka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFileBukaActionPerformed(evt);
            }
        });
        jmFile.add(jmiFileBuka);

        jmiFileSimpan.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jmiFileSimpan.setText("Simpan..");
        jmiFileSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFileSimpanActionPerformed(evt);
            }
        });
        jmFile.add(jmiFileSimpan);

        jmiFileKeluar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jmiFileKeluar.setText("Keluar");
        jmFile.add(jmiFileKeluar);

        jMenuBar1.add(jmFile);

        jmEdit.setText("Edit");
        jMenuBar1.add(jmEdit);

        jmHelp.setText("Help");

        jmiHelpUserGuide.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jmiHelpUserGuide.setText("User Guide");
        jmHelp.add(jmiHelpUserGuide);

        jmiHelpTentang.setText("Tentang Aplikasi");
        jmHelp.add(jmiHelpTentang);

        jMenuBar1.add(jmHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1010, 679));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jmiFileBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFileBaruActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmiFileBaruActionPerformed

    private void jmiFileBukaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFileBukaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmiFileBukaActionPerformed

    private void jmiFileSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFileSimpanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmiFileSimpanActionPerformed

    private void btnDMKTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDMKTambahActionPerformed
        // TODO add your handling code here:
        btnOKhandler = 1;
        jDialogMKPB.setLocationRelativeTo(this);
        jDialogMKPB.setTitle("Tambah Mata Kuliah");
        lblMKPB.setText("Masukkan Nama Mata Kuliah");
        jDialogMKPB.setVisible(true);
    }//GEN-LAST:event_btnDMKTambahActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        if (btnOKhandler == 1) {
            daftarMatkul.add(tfMKPB.getText());
            int lokasiitem = daftarMatkul.indexOf(tfMKPB.getText());
            cbMatkul.addItem(daftarMatkul.get(lokasiitem));
            tfMKPB.setText("");
            JOptionPane.showMessageDialog(this, "Mata Kuliah berhasil ditambahkan!");
            //refreshtampilmatkulpokbas();
            jDialogMKPB.hide();
        } else if (btnOKhandler == 2) {
            daftarPokokBahasan.add(tfMKPB.getText());
            int lokasiitem = daftarPokokBahasan.indexOf(tfMKPB.getText());
            cbPokokBahasan.addItem(daftarPokokBahasan.get(lokasiitem));
            tfMKPB.setText("");
            JOptionPane.showMessageDialog(this, "Pokok Bahasan berhasil ditambahkan!");
            //refreshtampilmatkulpokbas();
            jDialogMKPB.hide();
            //Edit Old
            /*
            Object cbterpilih =  cbPokokBahasan.getSelectedItem();
            String strcbterpilih = cbterpilih.toString();
            int lokasiitem = daftarPokokBahasan.indexOf(strcbterpilih);
            daftarPokokBahasan.add(lokasiitem, tfMKPB.getText());
            tfMKPB.setText("");
            JOptionPane.showMessageDialog(this, "Pokok Bahasan berhasil diedit!");
            jDialogMKPB.hide();
            */
        } else {
            JOptionPane.showMessageDialog(this, "Maaf Terjadi Error!");
        }
        
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnDMKHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDMKHapusActionPerformed
        // TODO add your handling code here:
        if (daftarMatkul.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            Object cbterpilih =  cbMatkul.getSelectedItem();
            String strcbterpilih = cbterpilih.toString();

            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this,
                    "Anda yakin ingin menghapus "+strcbterpilih+"?", "Hapus Item",
                    dialogButton, JOptionPane.WARNING_MESSAGE);
            JOptionPane pesan = new JOptionPane();
            if(dialogResult == 0) {
              //System.out.println("Yes option");
                int lokasiitem = daftarMatkul.indexOf(strcbterpilih);
                cbMatkul.removeItem(daftarMatkul.get(lokasiitem));
                try {
                    daftarMatkul.remove(strcbterpilih);
                } catch (IndexOutOfBoundsException e) {
                    pesan.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
                }

                pesan.showMessageDialog(this, "Mata Kuliah berhasil dihapus!");
            } else {
             pesan.hide();
            } 
        }
    }//GEN-LAST:event_btnDMKHapusActionPerformed

    private void btnDPBTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDPBTambahActionPerformed
        // TODO add your handling code here:
        btnOKhandler = 2;
        jDialogMKPB.setLocationRelativeTo(this);
        jDialogMKPB.setTitle("Tambah Pokok Bahasan");
        lblMKPB.setText("Masukkan Nama Pokok Bahasan");
        jDialogMKPB.setVisible(true);
    }//GEN-LAST:event_btnDPBTambahActionPerformed

    private void btnDPBHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDPBHapusActionPerformed
        // TODO add your handling code here:
        if (daftarPokokBahasan.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            Object cbterpilih =  cbPokokBahasan.getSelectedItem();
            String strcbterpilih = cbterpilih.toString();

            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this,
                    "Anda yakin ingin menghapus "+strcbterpilih+"?", "Hapus Item",
                    dialogButton, JOptionPane.WARNING_MESSAGE);
            JOptionPane pesan = new JOptionPane();
            if(dialogResult == 0) {
              //System.out.println("Yes option");
                int lokasiitem = daftarPokokBahasan.indexOf(strcbterpilih);
                cbPokokBahasan.removeItem(daftarPokokBahasan.get(lokasiitem));
                try {
                    daftarPokokBahasan.remove(strcbterpilih);
                } catch (IndexOutOfBoundsException e) {
                    pesan.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
                }

                pesan.showMessageDialog(this, "Pokok Bahasan berhasil dihapus!");
            } else {
              pesan.hide();
            } 
        }
    }//GEN-LAST:event_btnDPBHapusActionPerformed

    private void cbMatkulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMatkulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMatkulActionPerformed

    private void cbMatkulMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbMatkulMouseClicked
        // TODO add your handling code here:
        /*
        Object cbterpilih =  cbMatkul.getSelectedItem();
        String strcbterpilih = cbterpilih.toString();
        String namaPokBas = "namaList"+strcbterpilih;

        LinkedList namaListPokBas = new LinkedList();
        cbPokokBahasan.removeAllItems();
        for (int i = 0; i < namaListPokBas.size(); i++) {
            cbPokokBahasan.addItem(namaListPokBas.get(i));
        }
        */
    }//GEN-LAST:event_cbMatkulMouseClicked

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        Object cbMatkulTerpilih =  cbMatkul.getSelectedItem();
        Object cbPokokBahasanTerpilih =  cbPokokBahasan.getSelectedItem();
        if (cbMatkulTerpilih == null || cbPokokBahasanTerpilih == null) {
            JOptionPane.showMessageDialog(this, "Anda belum memilih Mata Kuliah atau Pokok Bahasan");
            cbMatkul.requestFocus(true);
        } else {
            String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
            String strcbPokokBahasanTerpilih = cbPokokBahasanTerpilih.toString();
        
            listSoal.add(new Pertanyaan(strcbMatkulTerpilih, strcbPokokBahasanTerpilih, 
                jTextAreaSoal.getText(), 
                jTextAreaJawabanA.getText(), jRadioButtonJawabanA.isSelected(), 
                jTextAreaJawabanB.getText(), jRadioButtonJawabanB.isSelected(),
                jTextAreaJawabanC.getText(), jRadioButtonJawabanC.isSelected(), 
                jTextAreaJawabanD.getText(), jRadioButtonJawabanD.isSelected(),
                jTextAreaJawabanE.getText(), jRadioButtonJawabanE.isSelected()));
        
            refreshCBDaftarSoal(); 
            refreshCBGenerate(); 
            
            JOptionPane.showMessageDialog(this, "Soal ke "+ (i+1) +" berhasil ditambahkan!"
                + "\nSilahkan mengisi soal berikutnya.");
            i++;
            //lblNomorSoal.setText(""+(i+1));
            jTextAreaSoal.setText("");
            jTextAreaJawabanA.setText("");
            jTextAreaJawabanB.setText("");
            jTextAreaJawabanC.setText("");
            jTextAreaJawabanD.setText("");
            jTextAreaJawabanE.setText("");
            jRadioButtonJawabanA.setSelected(false);
            jRadioButtonJawabanB.setSelected(false);
            jRadioButtonJawabanC.setSelected(false);
            jRadioButtonJawabanD.setSelected(false);
            jRadioButtonJawabanE.setSelected(false);
            
        }
        
        
        //String listSoal = strcbMatkulTerpilih+strcbPokokBahasanTerpilih;
        //listSoal.add(strcbMatkulTerpilih,strcbPokokBahasanTerpilih,jTextAreaSoal.getText());
        /*Pertanyaan a = new Pertanyaan("Najib",true,true, false, false, false);
        
        a.getPertanyaan();
                LinkedList soal = new LinkedList();
        soal.add(a.getPertanyaan());*/
        /*
        System.out.println(
                listSoal.get(index).matkul + "\n" + listSoal.get(index).pokbas
                +listSoal.get(index).pertanyaan +"\n"
                + listSoal.get(index).jawabanA+" = " + listSoal.get(index).isA() + "\n"
                + listSoal.get(index).jawabanB+" = " + listSoal.get(index).isB() + "\n"
                + listSoal.get(index).jawabanC+" = " + listSoal.get(index).isC() + "\n"
                + listSoal.get(index).jawabanD+" = " + listSoal.get(index).isD() + "\n"
                + listSoal.get(index).jawabanE+" = " + listSoal.get(index).isE() + "\n"
                );
        */
        
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnPalingAkhirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPalingAkhirActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            i = listSoal.size()-1;
            tampil();
        }
    }//GEN-LAST:event_btnPalingAkhirActionPerformed

    private void btnPalingAwalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPalingAwalActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            i = 0;
            tampil();
        }
    }//GEN-LAST:event_btnPalingAwalActionPerformed

    private void btnSelanjutnyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelanjutnyaActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            i++;
            if(i >= listSoal.size()) {
                i = 0;
            }
            tampil();
        }
    }//GEN-LAST:event_btnSelanjutnyaActionPerformed

    private void btnSebelumnyaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSebelumnyaActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            i--;
            if(i <= 0) {
                i = listSoal.size()-1;
            }
            tampil();        
        }
    }//GEN-LAST:event_btnSebelumnyaActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            Object cbMatkulTerpilih =  cbMatkul.getSelectedItem();
            Object cbPokokBahasanTerpilih =  cbPokokBahasan.getSelectedItem();
            if (cbMatkulTerpilih == null || cbPokokBahasanTerpilih == null) {
                JOptionPane.showMessageDialog(this, "Anda belum memilih Mata Kuliah atau Pokok Bahasan");
                cbMatkul.requestFocus(true);
            } else {
                String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
                String strcbPokokBahasanTerpilih = cbPokokBahasanTerpilih.toString();

                listSoal.add(i, new Pertanyaan(strcbMatkulTerpilih, strcbPokokBahasanTerpilih, 
                    jTextAreaSoal.getText(), 
                    jTextAreaJawabanA.getText(), jRadioButtonJawabanA.isSelected(), 
                    jTextAreaJawabanB.getText(), jRadioButtonJawabanB.isSelected(),
                    jTextAreaJawabanC.getText(), jRadioButtonJawabanC.isSelected(), 
                    jTextAreaJawabanD.getText(), jRadioButtonJawabanD.isSelected(),
                    jTextAreaJawabanE.getText(), jRadioButtonJawabanE.isSelected()));
                try {
                    listSoal.remove((i+1));
                    JOptionPane.showMessageDialog(this, "Soal ke "+ (i+1) +" berhasil diedit!"
                    + "\nSilahkan mengisi soal berikutnya.");
                } catch (IndexOutOfBoundsException e) {
                    JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
                }



                i++;
                //lblNomorSoal.setText(""+(i+1));
                jTextAreaSoal.setText("");
                jTextAreaJawabanA.setText("");
                jTextAreaJawabanB.setText("");
                jTextAreaJawabanC.setText("");
                jTextAreaJawabanD.setText("");
                jTextAreaJawabanE.setText("");
                jRadioButtonJawabanA.setSelected(false);
            jRadioButtonJawabanB.setSelected(false);
            jRadioButtonJawabanC.setSelected(false);
            jRadioButtonJawabanD.setSelected(false);
            jRadioButtonJawabanE.setSelected(false);


            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusSoalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusSoalActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this,
                    "Anda yakin ingin menghapus Soal?", "Hapus Soal",
                    dialogButton, JOptionPane.WARNING_MESSAGE);
            if(dialogResult == 0) {
              //System.out.println("Yes option");
                try {
                    listSoal.remove(i);
                    JOptionPane.showMessageDialog(this, "Soal berhasil dihapus!");
                } catch (IndexOutOfBoundsException e) {
                    JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
                }


            } else {
              setVisible(false);
            } 
        }
        
    }//GEN-LAST:event_btnHapusSoalActionPerformed
    
    
    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        refreshCBDaftarSoal();
        setPropertiTabel();
        refreshCBGenerate();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void btnTampilkanDaftarSoalperPokBasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilkanDaftarSoalperPokBasActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            model.setRowCount(0);
            Object cbMatkulTerpilih =  cbMatkulDaftarSoalMatkul1.getSelectedItem();
            Object cbPokokBahasanTerpilih =  cbPokokBahasanDaftarSoalPokBas.getSelectedItem();
            String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
            String strcbPokokBahasanTerpilih = cbPokokBahasanTerpilih.toString();
            
            int no = 1;
            for (int j = 0; j < listSoal.size(); j++) {
                String nomor = String.valueOf(no);
                String [] isibaris = {nomor, listSoal.get(j).getMatkul(), listSoal.get(j).getPokbas(),
                    listSoal.get(j).getPertanyaan(),
                    listSoal.get(j).getJawabanA(), String.valueOf(listSoal.get(j).isA()),
                    listSoal.get(j).getJawabanB(), String.valueOf(listSoal.get(j).isB()),
                    listSoal.get(j).getJawabanC(), String.valueOf(listSoal.get(j).isC()),
                    listSoal.get(j).getJawabanD(), String.valueOf(listSoal.get(j).isD()),
                    listSoal.get(j).getJawabanE(), String.valueOf(listSoal.get(j).isE())};
                if (listSoal.get(j).getMatkul() == strcbMatkulTerpilih 
                        && listSoal.get(j).getPokbas() == strcbPokokBahasanTerpilih ) {
                    model.addRow(isibaris);
                    for (int k = 0; k < jTableDaftarSoal.getRowCount(); k++) {
                        control = new int[jTableDaftarSoal.getRowCount()];
                        control[k] = j;
                    }
                    no++;
                }        
                
            }
        }
//        updateDataTabel();
    }//GEN-LAST:event_btnTampilkanDaftarSoalperPokBasActionPerformed

    private void btnTampilkanDaftarSoalperMatkulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilkanDaftarSoalperMatkulActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            model.setRowCount(0);
            Object cbMatkulTerpilih =  cbMatkulDaftarSoalMatkul.getSelectedItem();
            String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
            
            int no = 1;
            for (int j = 0; j < listSoal.size(); j++) {
                String nomor = String.valueOf(no);
                String [] isibaris = {nomor, listSoal.get(j).getMatkul(), listSoal.get(j).getPokbas(),
                    listSoal.get(j).getPertanyaan(),
                    listSoal.get(j).getJawabanA(), String.valueOf(listSoal.get(j).isA()),
                    listSoal.get(j).getJawabanB(), String.valueOf(listSoal.get(j).isB()),
                    listSoal.get(j).getJawabanC(), String.valueOf(listSoal.get(j).isC()),
                    listSoal.get(j).getJawabanD(), String.valueOf(listSoal.get(j).isD()),
                    listSoal.get(j).getJawabanE(), String.valueOf(listSoal.get(j).isE())};
                if (listSoal.get(j).getMatkul() == strcbMatkulTerpilih ) {
                    model.addRow(isibaris);
                    for (int k = 0; k < jTableDaftarSoal.getRowCount(); k++) {
                        control = new int[jTableDaftarSoal.getRowCount()];
                        control[k] = j;
                    }
                    
                    no++;
                }        
                
            }
        }
    }//GEN-LAST:event_btnTampilkanDaftarSoalperMatkulActionPerformed

    private void btnTampilkanDaftarSoalSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilkanDaftarSoalSemuaActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            model.setRowCount(0);
           
            int no = 1;
            for (int j = 0; j < listSoal.size(); j++) {
                String nomor = String.valueOf(no);
                
                String [] isibaris = {nomor, listSoal.get(j).getMatkul(), listSoal.get(j).getPokbas(),
                    listSoal.get(j).getPertanyaan(),
                    listSoal.get(j).getJawabanA(), String.valueOf(listSoal.get(j).isA()),
                    listSoal.get(j).getJawabanB(), String.valueOf(listSoal.get(j).isB()),
                    listSoal.get(j).getJawabanC(), String.valueOf(listSoal.get(j).isC()),
                    listSoal.get(j).getJawabanD(), String.valueOf(listSoal.get(j).isD()),
                    listSoal.get(j).getJawabanE(), String.valueOf(listSoal.get(j).isE())};
                    
                    model.addRow(isibaris);
                    control = new int[jTableDaftarSoal.getRowCount()];
                    control[j] = j;
                no++;
            }
        }
    }//GEN-LAST:event_btnTampilkanDaftarSoalSemuaActionPerformed

    private void cbMatkulDaftarSoalMatkulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMatkulDaftarSoalMatkulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMatkulDaftarSoalMatkulActionPerformed

    private void cbMatkulExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbMatkulExportMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMatkulExportMouseClicked

    private void cbPokokBahasanExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPokokBahasanExportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPokokBahasanExportActionPerformed
    
    
    private void btnGenerateSoalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateSoalActionPerformed
        // TODO add your handling code here:
        //WriteToFile(soalExport);
        Collections.shuffle(soalExport);
        model.setRowCount(0);
        int no = 1;
        for (int j = 0; j < soalExport.size(); j++) {
            String nomor = String.valueOf(no);
            String [] isibaris = {nomor, listSoal.get(j).getMatkul(), listSoal.get(j).getPokbas(),
                    listSoal.get(j).getPertanyaan(),
                    listSoal.get(j).getJawabanA(), String.valueOf(listSoal.get(j).isA()),
                    listSoal.get(j).getJawabanB(), String.valueOf(listSoal.get(j).isB()),
                    listSoal.get(j).getJawabanC(), String.valueOf(listSoal.get(j).isC()),
                    listSoal.get(j).getJawabanD(), String.valueOf(listSoal.get(j).isD()),
                    listSoal.get(j).getJawabanE(), String.valueOf(listSoal.get(j).isE())};
            model.addRow(isibaris);
            control = new int[jTableDaftarSoal.getRowCount()];
            control[j] = j;
            no++;
        }        
        
    }//GEN-LAST:event_btnGenerateSoalActionPerformed

    private void btnDMKHapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDMKHapus1ActionPerformed
        // TODO add your handling code here:
        Object cbMatkulTerpilih =  cbMatkul.getSelectedItem();
        String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
        
        lblMataKuliah.setText(strcbMatkulTerpilih);
        
    }//GEN-LAST:event_btnDMKHapus1ActionPerformed

    private void btnDPBHapus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDPBHapus1ActionPerformed
        // TODO add your handling code here:
        Object cbPokokBahasanTerpilih =  cbPokokBahasan.getSelectedItem();
        String strcbPokokBahasanTerpilih = cbPokokBahasanTerpilih.toString();
        lblPokokBahasan.setText(strcbPokokBahasanTerpilih);
    }//GEN-LAST:event_btnDPBHapus1ActionPerformed
    JFileChooser chooser = new JFileChooser();
    int result;
    private void btnGenerateSoalExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateSoalExportActionPerformed
        // TODO add your handling code here:
        String file_name = title+" -- output.txt";
        File selectedFile = null;
        try {   /*
                jFileChooserGenerate.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                result = jFileChooserGenerate.showOpenDialog(this);
                if ( result == JFileChooser.APPROVE_OPTION) {
                    selectedFile = chooser.getSelectedFile();
                            
                    jLabelLokasiFile.setText("File akan disimpan di" + ((selectedFile!=null)?
                                      chooser.getSelectedFile().getAbsolutePath():"nothing"));
                } else {
                    jLabelLokasiFile.setText("Location to save file :");
               }
            */
                
                FileWriter fstream = new FileWriter(selectedFile.getAbsolutePath()+file_name);
                BufferedWriter out = new BufferedWriter(fstream);
                for (int j = 0; j < soalExport.size(); j++) {
                    String isibaris = listSoal.get(j).getMatkul() +","+ listSoal.get(j).getPokbas()+","+
                    listSoal.get(j).getPertanyaan()+","+
                    listSoal.get(j).getJawabanA()+","+ String.valueOf(listSoal.get(j).isA())+","+
                    listSoal.get(j).getJawabanB()+","+ String.valueOf(listSoal.get(j).isB())+","+
                    listSoal.get(j).getJawabanC()+","+ String.valueOf(listSoal.get(j).isC())+","+
                    listSoal.get(j).getJawabanD()+","+ String.valueOf(listSoal.get(j).isD())+","+
                    listSoal.get(j).getJawabanE()+","+ String.valueOf(listSoal.get(j).isE());
                    out.write(isibaris);              
                }
                out.close();
                //System.out.println("File created successfully.");
                jLabelLokasiFile.setText("File berhasil di simpan di folder Project Netbeans");
                JOptionPane.showMessageDialog(this, "File telah berhasil disimpan!","Sukses!", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "File gagal disimpan!","Gagal!", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnGenerateSoalExportActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jFrameDetailSoal.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldDetailSoalMataKuliahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDetailSoalMataKuliahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDetailSoalMataKuliahActionPerformed

    private void btnGenerateTampilkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateTampilkanActionPerformed
        // TODO add your handling code here:
        if (listSoal.isEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Tidak ada data!","Peringatan", JOptionPane.WARNING_MESSAGE);
        } else {
            model.setRowCount(0);
            Object cbMatkulTerpilih =  cbMatkulGenerate.getSelectedItem();
            Object cbPokokBahasanTerpilih =  cbPokokBahasanGenerate.getSelectedItem();
            String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
            String strcbPokokBahasanTerpilih = cbPokokBahasanTerpilih.toString();
            
            int no = 1;
            for (int j = 0; j < listSoal.size(); j++) {
                String nomor = String.valueOf(no);
                String [] isibaris = {nomor, listSoal.get(j).getMatkul(), listSoal.get(j).getPokbas(),
                    listSoal.get(j).getPertanyaan(),
                    listSoal.get(j).getJawabanA(), String.valueOf(listSoal.get(j).isA()),
                    listSoal.get(j).getJawabanB(), String.valueOf(listSoal.get(j).isB()),
                    listSoal.get(j).getJawabanC(), String.valueOf(listSoal.get(j).isC()),
                    listSoal.get(j).getJawabanD(), String.valueOf(listSoal.get(j).isD()),
                    listSoal.get(j).getJawabanE(), String.valueOf(listSoal.get(j).isE())};
                if (listSoal.get(j).getMatkul() == strcbMatkulTerpilih 
                        && listSoal.get(j).getPokbas() == strcbPokokBahasanTerpilih ) {
                    model.addRow(isibaris);
                    for (int k = 0; k < jTableGenerate.getRowCount(); k++) {
                        control = new int[jTableGenerate.getRowCount()];
                        control[k] = j;
                    }
                    no++;
                    soalExport = new LinkedList<Pertanyaan>();
                    soalExport.add(new Pertanyaan(listSoal.get(j).getMatkul(), listSoal.get(j).getPokbas(),
                    listSoal.get(j).getPertanyaan(),
                    listSoal.get(j).getJawabanA(), listSoal.get(j).isA(),
                    listSoal.get(j).getJawabanB(), listSoal.get(j).isB(),
                    listSoal.get(j).getJawabanC(), listSoal.get(j).isC(),
                    listSoal.get(j).getJawabanD(), listSoal.get(j).isD(),
                    listSoal.get(j).getJawabanE(), listSoal.get(j).isE()));
                }
            }
            
            
        }
    }//GEN-LAST:event_btnGenerateTampilkanActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDMKHapus;
    private javax.swing.JButton btnDMKHapus1;
    private javax.swing.JButton btnDMKTambah;
    private javax.swing.JButton btnDPBHapus;
    private javax.swing.JButton btnDPBHapus1;
    private javax.swing.JButton btnDPBTambah;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnGenerateSoal;
    private javax.swing.JButton btnGenerateSoalExport;
    private javax.swing.JButton btnGenerateTampilkan;
    private javax.swing.JButton btnHapusSoal;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnPalingAkhir;
    private javax.swing.JButton btnPalingAwal;
    private javax.swing.JButton btnSebelumnya;
    private javax.swing.JButton btnSelanjutnya;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTampilkanDaftarSoalSemua;
    private javax.swing.JButton btnTampilkanDaftarSoalperMatkul;
    private javax.swing.JButton btnTampilkanDaftarSoalperPokBas;
    private javax.swing.JComboBox cbMatkul;
    private javax.swing.JComboBox cbMatkulDaftarSoalMatkul;
    private javax.swing.JComboBox cbMatkulDaftarSoalMatkul1;
    private javax.swing.JComboBox cbMatkulExport;
    private javax.swing.JComboBox cbMatkulGenerate;
    private javax.swing.JComboBox cbPokokBahasan;
    private javax.swing.JComboBox cbPokokBahasanDaftarSoalPokBas;
    private javax.swing.JComboBox cbPokokBahasanExport;
    private javax.swing.JComboBox cbPokokBahasanGenerate;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialogMKPB;
    private javax.swing.JFileChooser jFileChooserGenerate;
    private javax.swing.JFrame jFrameDetailSoal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelA;
    private javax.swing.JLabel jLabelB;
    private javax.swing.JLabel jLabelC;
    private javax.swing.JLabel jLabelD;
    private javax.swing.JLabel jLabelE;
    private javax.swing.JLabel jLabelLokasiFile;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBuatSoal;
    private javax.swing.JPanel jPanelDaftarMatkul;
    private javax.swing.JPanel jPanelDaftarMatkul1;
    private javax.swing.JPanel jPanelDaftarSoal;
    private javax.swing.JPanel jPanelDetailSoal;
    private javax.swing.JPanel jPanelGenerateSoal;
    private javax.swing.JPanel jPanelMatkulPokokBahasan;
    private javax.swing.JPanel jPanelPertanyaan;
    private javax.swing.JPanel jPanelPilihDaftarMatkul1;
    private javax.swing.JPanel jPanelPilihan;
    private javax.swing.JRadioButton jRadioButtonJawabanA;
    private javax.swing.JRadioButton jRadioButtonJawabanB;
    private javax.swing.JRadioButton jRadioButtonJawabanC;
    private javax.swing.JRadioButton jRadioButtonJawabanD;
    private javax.swing.JRadioButton jRadioButtonJawabanE;
    private javax.swing.JScrollPane jScrollJawabanA;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPaneJawabanB;
    private javax.swing.JScrollPane jScrollPaneJawabanC;
    private javax.swing.JScrollPane jScrollPaneJawabanD;
    private javax.swing.JScrollPane jScrollPaneJawabanE;
    private javax.swing.JScrollPane jScrollSoal;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableDaftarSoal;
    private javax.swing.JTable jTableGenerate;
    private javax.swing.JTextArea jTextAreaDetailSoalJawaban;
    private javax.swing.JTextArea jTextAreaDetailSoalSoal;
    private javax.swing.JTextArea jTextAreaJawabanA;
    private javax.swing.JTextArea jTextAreaJawabanB;
    private javax.swing.JTextArea jTextAreaJawabanC;
    private javax.swing.JTextArea jTextAreaJawabanD;
    private javax.swing.JTextArea jTextAreaJawabanE;
    private javax.swing.JTextArea jTextAreaSoal;
    private javax.swing.JTextField jTextFieldDetailSoalMataKuliah;
    private javax.swing.JTextField jTextFieldDetailSoalPokokBahasan;
    private javax.swing.JTextField jTextFieldGenerateJumlahSoal;
    private javax.swing.JMenu jmEdit;
    private javax.swing.JMenu jmFile;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenuItem jmiFileBaru;
    private javax.swing.JMenuItem jmiFileBuka;
    private javax.swing.JMenuItem jmiFileKeluar;
    private javax.swing.JMenuItem jmiFileSimpan;
    private javax.swing.JMenuItem jmiHelpTentang;
    private javax.swing.JMenuItem jmiHelpUserGuide;
    private javax.swing.JLabel lblDaftarMatkul;
    private javax.swing.JLabel lblDaftarMatkulGenerate1;
    private javax.swing.JLabel lblDaftarPokokBahasan;
    private javax.swing.JLabel lblDaftarPokokBahasanGenerate1;
    private javax.swing.JLabel lblJumlahSoalGenerate1;
    private javax.swing.JLabel lblMKPB;
    private javax.swing.JLabel lblMataKuliah;
    private javax.swing.JLabel lblMataKuliah1;
    private javax.swing.JLabel lblPokokBahasan;
    private javax.swing.JLabel lblPokokBahasan1;
    private javax.swing.JTextField tfJumlahSoalExport;
    private javax.swing.JTextField tfMKPB;
    // End of variables declaration//GEN-END:variables
    
    DefaultTableModel model;
    int[] control;
    private void setPropertiTabel() {
        String [] kolom = {"No", "Mata Kuliah", "Pokok Bahasan", "Pertanyaan",
            "Jawaban A", "A","Jawaban B", "B", "Jawaban C", "C", "Jawaban D", "D", "Jawaban E", "E"};
        model = new DefaultTableModel(kolom, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jTableDaftarSoal.setModel(model);
        jTableGenerate.setModel(model);
        jTableGenerate.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent e) {
          if (e.getClickCount() == 1) {
            JTable target = (JTable)e.getSource();
            int row = target.getSelectedRow();
              //System.out.println("row terpilih adalah : "+row);
              //System.out.println("nilai row terpilih adalah : "+control[row]);
            //int column = target.getSelectedColumn();
              
                  jTextFieldDetailSoalMataKuliah.setText(listSoal.get(control[row]).getMatkul());
                  jTextFieldDetailSoalPokokBahasan.setText(listSoal.get(control[row]).getMatkul());
                  jTextAreaDetailSoalSoal.setText(listSoal.get(control[row]).getPertanyaan());
                  if(listSoal.get(control[row]).isA() == false && listSoal.get(control[row]).isB() == false
                          && listSoal.get(control[row]).isC() == false && listSoal.get(control[row]).isD() == false
                          && listSoal.get(control[row]).isE() == false) {
                      jTextAreaDetailSoalJawaban.setText("Tidak ada jawaban untuk soal ini");
                  } else {
                    jTextAreaDetailSoalJawaban.setText(
                            listSoal.get(control[row]).getJawabanA()+"\t\t"+listSoal.get(control[row]).isA()+"\n"+
                            listSoal.get(control[row]).getJawabanB()+"\t\t"+listSoal.get(control[row]).isB()+"\n"+
                            listSoal.get(control[row]).getJawabanC()+"\t\t"+listSoal.get(control[row]).isC()+"\n"+
                            listSoal.get(control[row]).getJawabanD()+"\t\t"+listSoal.get(control[row]).isD()+"\n"+
                            listSoal.get(control[row]).getJawabanE()+"\t\t"+listSoal.get(control[row]).isE()
                    );
                  }
                       
            jFrameDetailSoal.setLocationRelativeTo(null);
            jFrameDetailSoal.show();
             
          }
        }
      });
                
                
        jTableDaftarSoal.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent e) {
          if (e.getClickCount() == 1) {
            JTable target = (JTable)e.getSource();
            int row = target.getSelectedRow();
              //System.out.println("row terpilih adalah : "+row);
              //System.out.println("nilai row terpilih adalah : "+control[row]);
            //int column = target.getSelectedColumn();
              
                  jTextFieldDetailSoalMataKuliah.setText(listSoal.get(control[row]).getMatkul());
                  jTextFieldDetailSoalPokokBahasan.setText(listSoal.get(control[row]).getMatkul());
                  jTextAreaDetailSoalSoal.setText(listSoal.get(control[row]).getPertanyaan());
                  if(listSoal.get(control[row]).isA() == false && listSoal.get(control[row]).isB() == false
                          && listSoal.get(control[row]).isC() == false && listSoal.get(control[row]).isD() == false
                          && listSoal.get(control[row]).isE() == false) {
                      jTextAreaDetailSoalJawaban.setText("Tidak ada jawaban untuk soal ini");
                  } else {
                    jTextAreaDetailSoalJawaban.setText(
                            listSoal.get(control[row]).getJawabanA()+"\t\t"+listSoal.get(control[row]).isA()+"\n"+
                            listSoal.get(control[row]).getJawabanB()+"\t\t"+listSoal.get(control[row]).isB()+"\n"+
                            listSoal.get(control[row]).getJawabanC()+"\t\t"+listSoal.get(control[row]).isC()+"\n"+
                            listSoal.get(control[row]).getJawabanD()+"\t\t"+listSoal.get(control[row]).isD()+"\n"+
                            listSoal.get(control[row]).getJawabanE()+"\t\t"+listSoal.get(control[row]).isE()
                    );
                  }
                       
            jFrameDetailSoal.setLocationRelativeTo(null);
            jFrameDetailSoal.show();
             
          }
        }
      });
    }
    
    private void settampilawal() {
        Object cbMatkulTerpilih =  cbMatkul.getSelectedItem();
        Object cbPokokBahasanTerpilih =  cbPokokBahasan.getSelectedItem();
        if (cbMatkulTerpilih == "Item 1" || cbPokokBahasanTerpilih == "Item 1") {
            lblMataKuliah.setText("None");
            lblPokokBahasan.setText("None");
            //lblNomorSoal.setText(""+(i+1));
            jTextAreaSoal.setText("");
            jTextAreaJawabanA.setText("");
            jTextAreaJawabanB.setText("");
            jTextAreaJawabanC.setText("");
            jTextAreaJawabanD.setText("");
            jTextAreaJawabanE.setText("");
        } else {
            String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
            String strcbPokokBahasanTerpilih = cbPokokBahasanTerpilih.toString();
            lblMataKuliah.setText(strcbMatkulTerpilih);
            lblPokokBahasan.setText(strcbPokokBahasanTerpilih);
            //lblNomorSoal.setText(""+(i+1));
            jTextAreaSoal.setText("");
            jTextAreaJawabanA.setText("");
            jTextAreaJawabanB.setText("");
            jTextAreaJawabanC.setText("");
            jTextAreaJawabanD.setText("");
            jTextAreaJawabanE.setText("");
            jRadioButtonJawabanA.setSelected(false);
            jRadioButtonJawabanB.setSelected(false);
            jRadioButtonJawabanC.setSelected(false);
            jRadioButtonJawabanD.setSelected(false);
            jRadioButtonJawabanE.setSelected(false);
            
        }
        
    }
    
    void refreshtampilmatkulpokbas() {
        Object cbMatkulTerpilih =  cbMatkul.getSelectedItem();
        Object cbPokokBahasanTerpilih =  cbPokokBahasan.getSelectedItem();
        String strcbMatkulTerpilih = cbMatkulTerpilih.toString();
        String strcbPokokBahasanTerpilih = cbPokokBahasanTerpilih.toString();
        lblMataKuliah.setText(strcbMatkulTerpilih);
        lblPokokBahasan.setText(strcbPokokBahasanTerpilih);
    }
    
    void tampil() {
        lblMataKuliah.setText(listSoal.get(i).matkul);
        lblPokokBahasan.setText(listSoal.get(i).pokbas);
        //lblNomorSoal.setText(""+(i+1));
        jTextAreaSoal.setText(listSoal.get(i).getPertanyaan());
        jTextAreaJawabanA.setText(listSoal.get(i).jawabanA);
        jTextAreaJawabanB.setText(listSoal.get(i).jawabanB);
        jTextAreaJawabanC.setText(listSoal.get(i).jawabanC);
        jTextAreaJawabanD.setText(listSoal.get(i).jawabanD);
        jTextAreaJawabanE.setText(listSoal.get(i).jawabanE);
        jRadioButtonJawabanA.setSelected(listSoal.get(i).isA());
        jRadioButtonJawabanB.setSelected(listSoal.get(i).isB());
        jRadioButtonJawabanC.setSelected(listSoal.get(i).isC());
        jRadioButtonJawabanD.setSelected(listSoal.get(i).isD());
        jRadioButtonJawabanE.setSelected(listSoal.get(i).isE());
    }
    
    private void hapusItemCB() {
        cbMatkul.removeAllItems(); //hapus List yg sudah ada
        cbPokokBahasan.removeAllItems(); //hapus List yg sudah ada
        cbMatkulGenerate.removeAllItems(); //hapus List yg sudah ada
        cbPokokBahasanGenerate.removeAllItems(); //hapus List yg sudah ada
        cbMatkulDaftarSoalMatkul1.removeAllItems();
        cbMatkulDaftarSoalMatkul.removeAllItems();
        cbPokokBahasanDaftarSoalPokBas.removeAllItems();
    }
    
    private void refreshCBDaftarSoal() {
        cbMatkulDaftarSoalMatkul.removeAllItems();
        cbMatkulDaftarSoalMatkul1.removeAllItems();//hapus List yg sudah ada
        cbPokokBahasanDaftarSoalPokBas.removeAllItems(); //hapus List yg sudah ada
        int sizeMatkul = 0;
        while (sizeMatkul < daftarMatkul.size()) {
            cbMatkulDaftarSoalMatkul.addItem(daftarMatkul.get(sizeMatkul));
            cbMatkulDaftarSoalMatkul1.addItem(daftarMatkul.get(sizeMatkul));
            sizeMatkul++;
        }
        int sizePokBas = 0;
        while (sizePokBas < daftarPokokBahasan.size()) {
            cbPokokBahasanDaftarSoalPokBas.addItem(daftarPokokBahasan.get(sizePokBas));
            sizePokBas++;
        }
        
        /*
        for (int i = 0; i < daftarMatkul.size(); i++) {
            cbMatkulGenerate.addItem(daftarMatkul.get(i));
        }
        for (int i = 0; i < daftarPokokBahasan.size(); i++) {
            cbPokokBahasanGenerate.addItem(daftarPokokBahasan.get(i));
        }
        cbMatkulGenerate.removeAllItems(); //hapus List yg sudah ada
        cbPokokBahasanGenerate.removeAllItems(); //hapus List yg sudah ada
        */
    }
    
    private void refreshCBGenerate() {
        cbMatkulGenerate.removeAllItems(); //hapus List yg sudah ada
        cbPokokBahasanGenerate.removeAllItems(); //hapus List yg sudah ada
        int sizeMatkul = 0;
        while (sizeMatkul < daftarMatkul.size()) {
            cbMatkulGenerate.addItem(daftarMatkul.get(sizeMatkul));
            sizeMatkul++;
        }
        int sizePokBas = 0;
        while (sizePokBas < daftarPokokBahasan.size()) {
            cbPokokBahasanGenerate.addItem(daftarPokokBahasan.get(sizePokBas));
            sizePokBas++;
        }
        
        /*
        for (int i = 0; i < daftarMatkul.size(); i++) {
            cbMatkulGenerate.addItem(daftarMatkul.get(i));
        }
        for (int i = 0; i < daftarPokokBahasan.size(); i++) {
            cbPokokBahasanGenerate.addItem(daftarPokokBahasan.get(i));
        }
        cbMatkulGenerate.removeAllItems(); //hapus List yg sudah ada
        cbPokokBahasanGenerate.removeAllItems(); //hapus List yg sudah ada
        */
    }
    String title;
    private void setJudulFrame() {
        Awal obj = new Awal();
        title = obj.getNamaProject();
        String judulAplikasi = "BankSoal Portable 1.0";
        this.setTitle(title + " - "+ judulAplikasi);
    }
    
    private static void WriteToFile(LinkedList<Pertanyaan> user){
        try {
          FileOutputStream fos = new FileOutputStream ("keep.ser");
          ObjectOutputStream oos = new ObjectOutputStream(fos);
          oos.writeObject(user);
          fos.close();
        } 
        catch (Exception e) {
          System.out.println(e);   
        }
    }
    private static LinkedList<Pertanyaan> ReadFromFile(){
      LinkedList<Pertanyaan> o_userdata = new LinkedList<Pertanyaan>();
      try {
        FileInputStream fis = new  FileInputStream("keep.ser");
        ObjectInputStream ois = new ObjectInputStream(fis);
        Object obj = ois.readObject();
        o_userdata = (LinkedList<Pertanyaan>) obj;
      } 
      catch (Exception e) {
        System.out.println(e);
      } 
      return o_userdata;
    }

    
}
